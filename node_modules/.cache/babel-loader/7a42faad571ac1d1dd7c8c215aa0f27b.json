{"ast":null,"code":"import _slicedToArray from\"C:/Users/91955/Desktop/Portfolio Website/React-portfolio-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"C:/Users/91955/Desktop/Portfolio Website/React-portfolio-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{useEffect,useState}from\"react\";import PortfolioData from\"./PortfolioData\";import PortfolioContent from\"./PortfolioContent\";import Style from\"./Portfolio.module.css\";import Heading from\"../../UI/Heading\";import PortfolioButtons from\"./PortfolioButtons\";import Aos from\"aos\";import\"aos/dist/aos.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var tools=[\"All\"].concat(_toConsumableArray(new Set(PortfolioData.map(function(data){return data.tools;}))));var Portfolio=function Portfolio(){var _useState=useState(PortfolioData),_useState2=_slicedToArray(_useState,2),toolsData=_useState2[0],setToolsData=_useState2[1];var changeToolsHandler=function changeToolsHandler(toolsName){if(toolsName===\"All\"){setToolsData(PortfolioData);}else{var updatedToolsName=PortfolioData.filter(function(item){return toolsName===item.tools;});setToolsData(updatedToolsName);}};useEffect(function(){Aos.init({duration:2000});},[]);return/*#__PURE__*/_jsxs(\"div\",{className:Style[\"portfolio_page\"],children:[/*#__PURE__*/_jsx(Heading,{children:\"PORTFOLIO\"}),/*#__PURE__*/_jsx(PortfolioButtons,{tools:tools,onChangeToolsHandler:changeToolsHandler}),/*#__PURE__*/_jsx(\"div\",{className:Style[\"portfolio\"],\"data-aos\":\"fade-right\",children:toolsData.map(function(pData){return/*#__PURE__*/_jsx(PortfolioContent,{pData:pData},pData.id);})})]});};export default Portfolio;","map":{"version":3,"sources":["C:/Users/91955/Desktop/Portfolio Website/React-portfolio-website/src/Components/Pages/Portfolio/Portfolio.js"],"names":["React","useEffect","useState","PortfolioData","PortfolioContent","Style","Heading","PortfolioButtons","Aos","tools","Set","map","data","Portfolio","toolsData","setToolsData","changeToolsHandler","toolsName","updatedToolsName","filter","item","init","duration","pData","id"],"mappings":"sXAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,wBAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,kBAApB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,GAAP,KAAgB,KAAhB,CACA,MAAO,kBAAP,C,wFACA,GAAMC,CAAAA,KAAK,EAAI,KAAJ,4BAAc,GAAIC,CAAAA,GAAJ,CAAQP,aAAa,CAACQ,GAAd,CAAkB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACH,KAAf,EAAlB,CAAR,CAAd,EAAX,CACA,GAAMI,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,cAAkCX,QAAQ,CAACC,aAAD,CAA1C,wCAAOW,SAAP,eAAkBC,YAAlB,eACA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,SAAD,CAAe,CACxC,GAAIA,SAAS,GAAK,KAAlB,CAAyB,CACvBF,YAAY,CAACZ,aAAD,CAAZ,CACD,CAFD,IAEO,CACL,GAAMe,CAAAA,gBAAgB,CAAGf,aAAa,CAACgB,MAAd,CACvB,SAACC,IAAD,QAAUH,CAAAA,SAAS,GAAKG,IAAI,CAACX,KAA7B,EADuB,CAAzB,CAGAM,YAAY,CAACG,gBAAD,CAAZ,CACD,CACF,CATD,CAUAjB,SAAS,CAAC,UAAM,CACdO,GAAG,CAACa,IAAJ,CAAS,CAAEC,QAAQ,CAAE,IAAZ,CAAT,EACD,CAFQ,CAEN,EAFM,CAAT,CAGA,mBACE,aAAK,SAAS,CAAEjB,KAAK,CAAC,gBAAD,CAArB,wBACE,KAAC,OAAD,wBADF,cAEE,KAAC,gBAAD,EACE,KAAK,CAAEI,KADT,CAEE,oBAAoB,CAAEO,kBAFxB,EAFF,cAME,YAAK,SAAS,CAAEX,KAAK,CAAC,WAAD,CAArB,CAAoC,WAAS,YAA7C,UACGS,SAAS,CAACH,GAAV,CAAc,SAACY,KAAD,qBACb,KAAC,gBAAD,EAAiC,KAAK,CAAEA,KAAxC,EAAuBA,KAAK,CAACC,EAA7B,CADa,EAAd,CADH,EANF,GADF,CAcD,CA7BD,CA+BA,cAAeX,CAAAA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PortfolioData from \"./PortfolioData\";\r\nimport PortfolioContent from \"./PortfolioContent\";\r\nimport Style from \"./Portfolio.module.css\";\r\nimport Heading from \"../../UI/Heading\";\r\nimport PortfolioButtons from \"./PortfolioButtons\";\r\nimport Aos from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nconst tools = [\"All\", ...new Set(PortfolioData.map((data) => data.tools))];\r\nconst Portfolio = () => {\r\n  const [toolsData, setToolsData] = useState(PortfolioData);\r\n  const changeToolsHandler = (toolsName) => {\r\n    if (toolsName === \"All\") {\r\n      setToolsData(PortfolioData);\r\n    } else {\r\n      const updatedToolsName = PortfolioData.filter(\r\n        (item) => toolsName === item.tools\r\n      );\r\n      setToolsData(updatedToolsName);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    Aos.init({ duration: 2000 });\r\n  }, []);\r\n  return (\r\n    <div className={Style[\"portfolio_page\"]}>\r\n      <Heading>PORTFOLIO</Heading>\r\n      <PortfolioButtons\r\n        tools={tools}\r\n        onChangeToolsHandler={changeToolsHandler}\r\n      />\r\n      <div className={Style[\"portfolio\"]} data-aos=\"fade-right\">\r\n        {toolsData.map((pData) => (\r\n          <PortfolioContent key={pData.id} pData={pData} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n"]},"metadata":{},"sourceType":"module"}