{"ast":null,"code":"import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport equal from \"deep-eql\";\nconst defaultId = \"tsparticles\";\n\nclass Particles extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      init: false,\n      library: undefined\n    };\n  }\n\n  destroy() {\n    if (!this.state.library) {\n      return;\n    }\n\n    this.state.library.destroy();\n    this.setState({\n      library: undefined\n    });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return !equal(nextProps, this.props);\n  }\n\n  componentDidUpdate() {\n    this.refresh();\n  }\n\n  forceUpdate() {\n    this.refresh().then(() => {\n      super.forceUpdate();\n    });\n  }\n\n  componentDidMount() {\n    (async () => {\n      if (this.props.init) {\n        await this.props.init(tsParticles);\n      }\n\n      this.setState({\n        init: true\n      }, async () => {\n        await this.loadParticles();\n      });\n    })();\n  }\n\n  componentWillUnmount() {\n    this.destroy();\n  }\n\n  render() {\n    const {\n      width,\n      height,\n      className,\n      canvasClassName,\n      id\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: className,\n      id: id\n    }, React.createElement(\"canvas\", {\n      className: canvasClassName,\n      style: { ...this.props.style,\n        width,\n        height\n      }\n    }));\n  }\n\n  async refresh() {\n    this.destroy();\n    await this.loadParticles();\n  }\n\n  async loadParticles() {\n    if (!this.state.init) {\n      return;\n    }\n\n    const cb = async container => {\n      if (this.props.container) {\n        this.props.container.current = container;\n      }\n\n      this.setState({\n        library: container\n      });\n\n      if (this.props.loaded) {\n        await this.props.loaded(container);\n      }\n    };\n\n    const id = this.props.id ?? Particles.defaultProps.id ?? defaultId,\n          container = this.props.url ? await tsParticles.loadJSON(id, this.props.url) : await tsParticles.load(id, this.props.params ?? this.props.options);\n    await cb(container);\n  }\n\n}\n\nParticles.defaultProps = {\n  width: \"100%\",\n  height: \"100%\",\n  options: {},\n  style: {},\n  url: undefined,\n  id: defaultId\n};\nexport default Particles;","map":{"version":3,"sources":["C:/Users/91955/Desktop/Portfolio Website/React-portfolio-website/node_modules/react-tsparticles/esm/Particles.js"],"names":["React","Component","tsParticles","equal","defaultId","Particles","constructor","props","state","init","library","undefined","destroy","setState","shouldComponentUpdate","nextProps","componentDidUpdate","refresh","forceUpdate","then","componentDidMount","loadParticles","componentWillUnmount","render","width","height","className","canvasClassName","id","createElement","style","cb","container","current","loaded","defaultProps","url","loadJSON","load","params","options"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport equal from \"deep-eql\";\nconst defaultId = \"tsparticles\";\nclass Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        return !equal(nextProps, this.props);\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: {\n                    ...this.props.style,\n                    width,\n                    height,\n                } })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        if (!this.state.init) {\n            return;\n        }\n        const cb = async (container) => {\n            if (this.props.container) {\n                this.props.container.current = container;\n            }\n            this.setState({\n                library: container,\n            });\n            if (this.props.loaded) {\n                await this.props.loaded(container);\n            }\n        };\n        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = this.props.url\n            ? await tsParticles.loadJSON(id, this.props.url)\n            : await tsParticles.load(id, this.props.params ?? this.props.options);\n        await cb(container);\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\nexport default Particles;\n"]},"metadata":{},"sourceType":"module"}